/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.univali;

import excecoes.EntradaNula;
import excecoes.SaidaNula;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;


/**
 *
 * @author Rafael
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private File arquivo = null;
    private File backup = null;
    private InputStream is = null;
    private OutputStream os = null;
    private Core core;
    Controlador controlador;
    private static final String DesktopUsuario = obterDektopUsuario();
    
    public TelaPrincipal() {
        initComponents();
        this.setTitle("RFBackuper");
        this.controlador = new Controlador(this);
        this.core = new Core(controlador);
    }
       
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        botaoSelecionarArquivo = new javax.swing.JButton();
        botaoSelecionarDestino = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        botaoFechar = new javax.swing.JButton();
        botaoBackup = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0};
        layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        getContentPane().setLayout(layout);

        botaoSelecionarArquivo.setText("Selecionar");
        botaoSelecionarArquivo.setToolTipText("");
        botaoSelecionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarArquivoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        getContentPane().add(botaoSelecionarArquivo, gridBagConstraints);
        botaoSelecionarArquivo.getAccessibleContext().setAccessibleName("jButton1");

        botaoSelecionarDestino.setText("Selecionar");
        botaoSelecionarDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarDestinoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        getContentPane().add(botaoSelecionarDestino, gridBagConstraints);

        jLabel1.setText("Caminho do arquivo de origem:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 205;
        getContentPane().add(jTextField1, gridBagConstraints);

        jLabel2.setText("Caminho do arquivo de destino:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 205;
        getContentPane().add(jTextField2, gridBagConstraints);

        botaoFechar.setText("Fechar");
        botaoFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFecharActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 76, 5, 5);
        getContentPane().add(botaoFechar, gridBagConstraints);

        botaoBackup.setText("Backup!");
        botaoBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBackupActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 72);
        getContentPane().add(botaoBackup, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FileInputStream", "BufferedInputStream" }));
        jComboBox1.setSelectedIndex(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 32;
        getContentPane().add(jComboBox1, gridBagConstraints);

        jLabel3.setText("Modo de operação:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        getContentPane().add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jProgressBar1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBackupActionPerformed
        int op = this.jComboBox1.getSelectedIndex();
        
        try{
            if(jTextField1.getText().isEmpty()){
                throw new EntradaNula();
            }else if(jTextField2.getText().isEmpty()){
                throw new SaidaNula();
            }
            is = new FileInputStream(arquivo.getPath());
            
            os = new FileOutputStream(backup.getPath());
        }catch(EntradaNula ex){
            aviso("Um arquivo de entrada deve ser informado");
        }catch(SaidaNula ex){
            aviso("Um arquivo de saída deve ser informado");
        }
        catch (FileNotFoundException ex) {
            aviso("O arquivo informado não existe");
        }

        if(op == 1){
            is = new BufferedInputStream(is);
            os = new BufferedOutputStream(os);
        }
        new Thread( new Runnable() {
            public void run() {
                try {
                   
                        core.fazerBackup(is, os, arquivo.length());

                } catch (Exception ex) {
                    
                }
                
            }
        } ).start();
    }//GEN-LAST:event_botaoBackupActionPerformed

    private void botaoFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFecharActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botaoFecharActionPerformed

    private void botaoSelecionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarArquivoActionPerformed
        FileChooserFactory file = new FileChooserFactory(new File(DesktopUsuario)); 
        int i= file.showOpenDialog(this);
        
        if (i!=1){
            arquivo = file.getSelectedFile();
            this.jTextField1.setText(arquivo.getPath());
            System.out.println(arquivo.getPath());
        }
    }//GEN-LAST:event_botaoSelecionarArquivoActionPerformed

    private void botaoSelecionarDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarDestinoActionPerformed
        FileChooserFactory file = new FileChooserFactory(new File(DesktopUsuario)); 
        int i= file.showSaveDialog(this);
        
        if (i!=1){
            backup = file.getSelectedFile();
            this.jTextField2.setText(backup.getPath());
            System.out.println(backup.getPath());
        }
    }//GEN-LAST:event_botaoSelecionarDestinoActionPerformed
    
    public JProgressBar getProgressBar(){
        return jProgressBar1;
    }
    
    public JButton getBotaoBackup(){
        return botaoBackup;
    }
    
    public void aviso(String msg){
        JOptionPane.showMessageDialog(this, msg);
    }
    
    private static String obterDektopUsuario(){
        return (System.getProperty("user.home") + "/Desktop");
    }

    public static void main(String args[]) {
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoBackup;
    private javax.swing.JButton botaoFechar;
    private javax.swing.JButton botaoSelecionarArquivo;
    private javax.swing.JButton botaoSelecionarDestino;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
